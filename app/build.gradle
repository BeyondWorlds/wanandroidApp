import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.beyondworlds.wanandroid"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "default"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all { output ->
                def file = output.outputFile
                def newFileName = "WanAndroid_V" + "${android.defaultConfig.versionName}_" +
                        "${buildTime()}.apk"
                if (file != null && file.name.endsWith(".apk")) {
                    outputFileName = newFileName
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    //add android origin
    implementation "com.android.support:design:$support_version"
    //add open widget
    implementation "com.youth.banner:banner:$banner_version"
    //add open frame
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$brvah_version"
    compile "com.scwang.smartrefresh:SmartRefreshLayout:$refresh_version"
    compile "com.scwang.smartrefresh:SmartRefreshHeader:$refresh_version"//没有使用特殊Header，可以不加这行
}
/** 创建当前时间字符创 比如 20180407表示2018年4月7号进行编译 */
def buildTime() {
    def df = new SimpleDateFormat("yyyyMMdd")
    df.setTimeZone(TimeZone.getTimeZone("GMT+08:00"))
    df.format(new Date())
}